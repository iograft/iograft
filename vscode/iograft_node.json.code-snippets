{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

    "iograft Python node": {
        "scope": "python",
        "prefix": "iognode",
        "body": ["import iograft",
                 "import iobasictypes",
                 "",
                 "class ${1:MyOwnNode}(iograft.Node):",
                 "\t@classmethod",
                 "\tdef GetDefinition(cls):",
                 "\t\tnode = iograft.NodeDefinition(\"${2:<type_name>}\")",
                 "\t\treturn node",
                 "",
                 "\t@staticmethod",
                 "\tdef Create():",
                 "\t\treturn ${1:NodeClass}()",
                 "",
                 "\tdef Process(self, data):",
                 "\t\t${3:pass}",
                 "",
                 "def LoadPlugin(plugin):",
                 "\tnode = ${1:NodeClass}.GetDefinition()",
                 "\tplugin.RegisterNode(node, ${1:NodeClass}.Create)"],
        "description": "Create a skeleton iograft Python node."
    },
    "iograft Python input": {
        "scope": "python",
        "prefix": "ioginput",
        "body": ["${1:<input_name>} = iograft.InputDefinition(\"${1:<input_name>}\", ${2:<type>})"],
        "description": "Create an iograft Python node input."
    },
    "iograft Python output": {
        "scope": "python",
        "prefix": "iogoutput",
        "body": ["${1:<output_name>} = iograft.OutputDefinition(\"${1:<output_name>}\", ${2:<type>})"],
        "description": "Create an iograft Python node output."
    },

}
